{"version":3,"file":"static/js/913.7e239192.chunk.js","mappings":"qQACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA0E,kB,SCqC1E,MA/BA,WACA,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaI,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAEgCC,EAAAA,EAAAA,IAAgBN,GAFhD,OAEcO,EAFd,OAGQH,EAAQG,GAHhB,gDAKQC,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASfC,KACE,CAACV,KAGA,yBACOG,IAAQ,eAAIQ,UAAWC,EAAf,SACNT,EAAKA,KAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OAA2C,gBAAIN,UAAWC,EAAf,WACtD,gBAAKD,UAAWC,EAAOM,IAAKH,EAAY,yCAAqCA,GAAiBI,EAAcC,IAAKJ,KACjH,uBAAIA,KACJ,uCAAeC,OAHmEH,Y,0MCvBtGO,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBF,IAAAA,IAAA,qCACWC,IAF3B,cACDE,EADC,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBP,IAAAA,IAAA,+BACGC,EADH,kBACgBM,IAFlC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,uFACiBqB,IAAAA,IAAA,gBACXrB,EADW,oBACQsB,IAFzB,cACAE,EADA,yBAIEA,EAASC,MAJX,kEAOA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,uFACoBqB,IAAAA,IAAA,gBACdrB,EADc,4BACasB,IAFjC,cACGE,EADH,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,uFACqBqB,IAAAA,IAAA,gBACfrB,EADe,4BACYsB,IAFjC,cACIE,EADJ,yBAIEA,EAASC,MAJX,oE","sources":["webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"item\":\"Cast_item__vxHbm\",\"img\":\"Cast_img__uVPra\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/api';\nimport defaultImage from './defaultImage.jpg';\nimport s from './Cast.module.css';\n\n\nfunction Cast() {\nconst { movieId } = useParams();\nconst [cast, setCast] = useState(null);\n    useEffect(() => {\n        async function getCast() {\n            try {\n                const movieCast = await getMovieCredits(movieId)\n                setCast(movieCast)\n            } catch (error) {\n                console.log(error);\n            } \n        }\n     getCast()   \n    }, [movieId]); \n\n    return (\n        <div>\n             { cast && <ul className={s.list}>\n                {cast.cast.map(({ id, profile_path, name, character }) => <li className={s.item} key={id}>\n                    <img className={s.img} src={profile_path ? `https://image.tmdb.org/t/p/w300${profile_path}` : defaultImage} alt={name} />\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                </li>)}\n        </ul>}\n       </div>\n    )\n\n\n\n}\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'c46f114dbea28bcbc0da4b37aad3806b';\n\nexport async function getTrending() {\nconst response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport async function getSearchMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data.results;  \n};\n\nexport async function getMovieDetails(movieId) {\n const response = await axios.get(\n    `movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;  \n};\n\nexport async function getMovieCredits(movieId) {\n    const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;  \n};\n\nexport async function getMovieReviews(movieId) {\n     const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data; \n};\n\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getMovieCredits","movieCast","console","log","getCast","className","s","map","id","profile_path","name","character","src","defaultImage","alt","axios","KEY","getTrending","response","data","results","getSearchMovies","searchQuery","getMovieDetails","getMovieReviews"],"sourceRoot":""}
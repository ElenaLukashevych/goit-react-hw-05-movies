{"version":3,"file":"static/js/442.5be0e7f1.chunk.js","mappings":"gSAmDA,MA7CA,YAAmC,IAAbA,EAAY,EAAZA,SAClB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBE,OAEE,kBAAMH,SAjBS,SAACI,GAIvB,GAHGA,EAAMC,iBAGkB,KAAvBH,EAAYI,OACX,OAAOC,EAAAA,GAAAA,MAAY,qBAErBP,EAASE,GACTC,EAAe,KASX,WACE,oBAAQK,KAAK,SAAb,WACE,SAAC,MAAD,KAEN,yCAGM,kBACNC,SAdmB,SAAAL,GACtBD,EAAeC,EAAMM,cAAcC,MAAMC,gBActCD,MAAOT,EACPM,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,e,oBCclB,MA7CA,WACI,OAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAA8BhB,EAAAA,EAAAA,WAAS,GAAvC,eAAOiB,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAAcqB,EAAaE,IAAI,SA0BrC,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,uFACSxB,EADT,iEAKQiB,GAAW,GALnB,UAM4BQ,EAAAA,EAAAA,IAAgBzB,GAN5C,OAMc0B,EANd,OAOQX,EAAUW,GAPlB,kDASQrB,EAAAA,GAAAA,MAAY,aACZsB,QAAQC,IAAR,MAVR,yBAaQX,GAAW,GAbnB,8EADY,uBAAC,WAAD,wBAiBfY,KACE,CAAC7B,KAOA,iCACI,SAAC,EAAD,CAAYF,SANC,SAACgC,GAClBR,EAAgB,CAAES,MAAOD,OAMpBd,IAAW,SAAC,KAAD,CAAWgB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KACzDpB,IAAU,wBACNA,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAAmB,yBAC3B,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMtB,GAAzC,SAAqDmB,KADjBD,a,0MC1CxDK,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBF,IAAAA,IAAA,qCACWC,IAF3B,cACDE,EADC,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,uFACkByC,IAAAA,IAAA,+BACGC,EADH,kBACgB1C,IAFlC,cACC4C,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACiBP,IAAAA,IAAA,gBACXO,EADW,oBACQN,IAFzB,cACAE,EADA,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACoBP,IAAAA,IAAA,gBACdO,EADc,4BACaN,IAFjC,cACGE,EADH,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACqBP,IAAAA,IAAA,gBACfO,EADe,4BACYN,IAFjC,cACIE,EADJ,yBAIEA,EAASC,MAJX","sources":["components/SearchForm/SearchForm.js","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction SearchForm({ onSubmit }) {\n    const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n \n\n if (searchQuery.trim() === '') {\n      return toast.error('Please try again.');\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('')\n  }\n\n    const handleChange = event => {\n   setSearchQuery(event.currentTarget.value.toLowerCase())\n  };\n\n      return (\n     \n        <form onSubmit={handleSubmit} >\n          <button type=\"submit\" >\n            <ImSearch />\n\n      <span>Search</span>\n    </button>\n\n            <input\n      onChange={handleChange}\n      value={searchQuery}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search\"\n    />\n  </form>\n\n    )\n\n}\n\n// SearchForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n\nexport default SearchForm;","import { useLocation, useSearchParams, Link } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport SearchForm from '../../components/SearchForm';\nimport { getSearchMovies } from '../../services/api';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get('query');\n\n    useEffect(() => {\n        async function searchMovies() {\n            if (!searchQuery) {\n                return\n            }\n            try {\n                setLoading(true);\n                const movie = await getSearchMovies(searchQuery)\n                setMovies(movie)\n            } catch (error) {\n                toast.error('Not found')\n                console.log(error);\n\n            } finally {\n                setLoading(false);\n            }\n        }\n     searchMovies()   \n    }, [searchQuery]);\n\n    const handleSubmit = (name) => {\n        setSearchParams({ query: name })\n    }\n\n    return (\n        <>\n            <SearchForm onSubmit={handleSubmit} />\n            {loading && <ThreeDots color=\"#00BFFF\" height={80} width={80} />}\n            {movies && <ul>\n                {movies.map(({ id, title }) => <li key={id}>\n                    <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n                </li>)}\n            </ul> }\n        </>\n    )\n\n}\n\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'c46f114dbea28bcbc0da4b37aad3806b';\n\nexport async function getTrending() {\nconst response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport async function getSearchMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data.results;  \n};\n\nexport async function getMovieDetails(movieId) {\n const response = await axios.get(\n    `movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;  \n};\n\nexport async function getMovieCredits(movieId) {\n    const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;  \n};\n\nexport async function getMovieReviews(movieId) {\n     const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data; \n};\n\n"],"names":["onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toast","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","movies","setMovies","loading","setLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","movie","console","log","searchMovies","name","query","color","height","width","map","id","title","to","state","from","axios","KEY","getTrending","response","data","results","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}